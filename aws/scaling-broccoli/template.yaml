# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  scaling-broccoli

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  MaximumSize:
    Type: Number
    Default: 1000
    Description: '(Required) Maximum number of player ranked.'
    ConstraintDescription: 'Required. Must be an integer.'
  LeadersSize:
    Type: Number
    Default: 10
    Description: '(Required) Number of player returned in the leaderboard.'
    ConstraintDescription: 'Required. Must be an integer.'


# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  getLeaderboard:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-leaderboard.getLeaderboard
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Get leaderboard a player position if uuid is provided
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LeaderboardTable
      Environment:
        Variables:
          LEADERBOARD_TABLE: !Ref LeaderboardTable
          MAXIMUM_SIZE: !Ref MaximumSize
          LEADERS_SIZE: !Ref LeadersSize
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{uuid}
            Method: GET
  
  updateLeaderboardFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/update-learderboard.updateLeaderboard
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Update leaderboard with a score and return it
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LeaderboardTable
      Environment:
        Variables:
          LEADERBOARD_TABLE: !Ref LeaderboardTable
          MAXIMUM_SIZE: !Ref MaximumSize
          LEADERS_SIZE: !Ref LeadersSize
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  LeaderboardTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
