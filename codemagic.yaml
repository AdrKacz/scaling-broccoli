workflows:
  build-deploy-beta:
    name: Build and Deploy to Beta
    max_build_duration: 60
    integrations:
      app_store_connect: Scaling Broccoli
    environment:
      xcode: latest
      android_signing:
        - scaling_broccoli
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.kida.matchymatchysamesame
      vars:
        PACKAGE_NAME: "org.godotengine.gamejammerge"
        EXPORT_TYPE: "Android"
        GAME_DIR: "mobile-game"
        IOS_EXPORT_DIR: "exports/ios"
        BUNDLE_ID: "com.kida.matchymatchysamesame"
        XCODE_WORKSPACE: "scaling-broccoli.xcodeproj"
        XCODE_SCHEME: "scaling-broccoli"
        APP_ID: 1580700973
    scripts:
      - name:  Install android sdk
        script: |
          cd
          curl -LO https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
          unzip commandlinetools-mac-9477386_latest.zip
          mkdir android-sdk/ && mv cmdline-tools android-sdk/ && cd android-sdk/cmdline-tools
          mkdir -p latest/
          mv lib latest/
          mv bin latest/
          mv NOTICE.txt latest/
          mv source.properties latest/
          cd $CM_BUILD_DIR
          yes | /Users/builder/android-sdk/cmdline-tools/latest/bin/sdkmanager \
            --sdk_root=/Users/builder/android-sdk/ \
            "platform-tools" "build-tools;33.0.2" "platforms;android-33" \
            "cmdline-tools;latest" "cmake;3.10.2.4988404" "ndk;23.2.8568313"
      - name:  Install godot latest
        script: |
          brew install --cask godot
      - name: Install export templates
        script: |
          cd
          GODOT_VERSION=$(godot --version | awk -F '.' '{print $1"."$2"."$3}')
          curl -LO https://github.com/godotengine/godot/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          unzip Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          GODOT_TEMPLATE_DIR="/Users/builder/Library/Application Support/Godot/export_templates/${GODOT_VERSION}.stable/"
          mkdir -p "$GODOT_TEMPLATE_DIR" && mv templates/* "$GODOT_TEMPLATE_DIR"
          cd $CM_BUILD_DIR
      - name: Create export presets
        script: |
          python3 scripts/exports/create-export-preset.py \
            --path $CM_KEYSTORE_PATH \
            --alias $CM_KEY_ALIAS \
            --password $CM_KEY_PASSWORD
      - name: Create android template
        script: |
          GODOT_VERSION=$(godot --version | awk -F '.' '{print $1"."$2"."$3}')
          GODOT_TEMPLATE_ANDROID="/Users/builder/Library/Application Support/Godot/export_templates/${GODOT_VERSION}.stable/android_source.zip"
          mkdir -p "./$GAME_DIR/android/build/"
          mkdir -p "./$GAME_DIR/android/plugins/"
          echo "${GODOT_VERSION}.stable" > "./$GAME_DIR/android/.build_version"
          touch "./$GAME_DIR/android/build/.gdignore"
          unzip "$GODOT_TEMPLATE_ANDROID" -d "./$GAME_DIR/android/build/"
          ls $GAME_DIR
      - name: Build Android app - First attempt to import files
        script: |
          cd "$CM_BUILD_DIR/$GAME_DIR"
          godot --export-release "Android" --headless
      - name: Update Android SDK path in Godot Editor
        script: |
          python3 scripts/exports/update-editor-settings.py \
            --path "/Users/builder/Library/Application Support/Godot/editor_settings-4.tres" \
            --sdk "/Users/builder/android-sdk/"
      - name: Build Android app - Second attempt
        script: |
          cd "$CM_BUILD_DIR/$GAME_DIR"
          godot --export-release "Android" --headless
      - name: Set up code signing settings on Xcode project
        script: xcode-project use-profiles
      - name: Build iOS app with Godot
        script: |
          cd "$CM_BUILD_DIR/$GAME_DIR"
          godot --export-release "iOS Production" --headless
      - name: Increment build number
        script: | 
          #!/bin/sh
          cd "$CM_BUILD_DIR/$IOS_EXPORT_DIR"
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Build iOS ipa app for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/$IOS_EXPORT_DIR/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"
    artifacts:
      - exports/**/*.aab
      - exports/**/*.ipa
    publishing: 
      email:
        recipients:
          - adrien.kaczmarek@gmail.com
      
      